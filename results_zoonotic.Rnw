\documentclass{article}
\usepackage{graphicx}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage{times}

\textwidth=6.2in
\textheight=8.5in
%\parskip=.3cm
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in


%------------------------------------------------------------
% newcommand
%------------------------------------------------------------
\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rexpression}[1]{\texttt{#1}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}

\begin{document}
\SweaveOpts{concordance=TRUE}

%------------------------------------------------------------
\title{Zoonotic cryptosporidium}
%------------------------------------------------------------
\author{David Hayman}
%\date{}

\SweaveOpts{highlight=TRUE, tidy=TRUE, keep.space=TRUE, keep.blank.space=FALSE, keep.comment=TRUE}
\SweaveOpts{prefix.string=Fig}

\maketitle
%\tableofcontents

%-------------------------------------------
\section{Zoonotic - all data}
%--------------------------------------------

<<test1,echo=F,keep.source = FALSE>>=
rm(list = ls())
Pi_data<-read.csv('results.csv',header=T)
library(vegan)
@

<<test2,echo=T,keep.source = FALSE>>=
fit <- manova(cbind(Species,Gene,Pi,Theta) ~ Zoonotic, data = Pi_data)
summary(fit, test="Pillai")
summary.aov(fit)
@

%-------------------------------------------
\section{Gene - all data}
%--------------------------------------------

<<test2,echo=T,keep.source = FALSE>>=
fit <- manova(cbind(Species,Pi,Theta) ~ Gene, data = Pi_data)
summary(fit, test="Pillai")
summary.aov(fit)
@

\begin{figure}
<<test3, fig=TRUE,echo=F,float=FALSE>>=
library(ggplot2)
 gg_color_hue <- function(n) {
   hues = seq(15, 375, length = n + 1)
   hcl(h = hues, l = 65, c = 100)[1:n]
 }
 
 layout(matrix(c(1,2,2,3,4,4), nrow = 2, ncol = 3, byrow = TRUE))
 #par(mfrow=c(2,2))
 n = 2
 cols = gg_color_hue(n)
 plot(Pi_data$Zoonotic,Pi_data$Pi,col=cols,ylab=expression(Pi))
 n = 4
 cols = gg_color_hue(n)
 plot(Pi_data$Gene,Pi_data$Pi,col=cols,ylab=expression(Pi))
 n = 2
 cols = gg_color_hue(n)
 plot(Pi_data$Zoonotic,Pi_data$Theta,col=cols,ylab=expression(theta))
 n = 4
 cols = gg_color_hue(n)
 plot(Pi_data$Gene,Pi_data$Theta,col=cols,ylab=expression(theta))
@
\caption{All data}
\label{fig:w}
\end{figure}

\begin{figure}
<<test4,echo=F, fig=TRUE,float=T,height=8,width=8>>=
 p1 <- ggplot(Pi_data, aes (x = Theta, y = Pi, colour = Zoonotic)) + stat_density_2d() +
  ylab(expression(paste(Pi))) + xlab(expression(paste(theta)))

# require ('hexbin')
# ggplot(Pi_data, aes (x = Theta, y = Pi, fill = Zoonotic)) + stat_binhex (bins=2, aes (alpha = 0.5)) + ## NB alpha can be count
#   facet_grid (. ~ Zoonotic)

 p2 <- ggplot(Pi_data, aes(x = Theta, y = Pi, colour = Zoonotic)) + geom_point() +
   ylab(expression(paste(Pi))) + xlab(expression(paste(theta)))
# ggplot(Pi_data, aes(x = Theta, y = Pi)) + geom_point() + facet_grid(~Zoonotic)

 p3 <- ggplot(Pi_data, aes (x = Theta, y = Pi, colour = Gene)) + stat_density_2d() +
   ylab(expression(paste(Pi))) + xlab(expression(paste(theta)))
 p4 <-ggplot(Pi_data, aes(x = Theta, y = Pi, colour = Gene)) + geom_point() +
   ylab(expression(paste(Pi))) + xlab(expression(paste(theta)))
  multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
   library(grid)
   
   # Make a list from the ... arguments and plotlist
   plots <- c(list(...), plotlist)
   
   numPlots = length(plots)
   
   # If layout is NULL, then use 'cols' to determine layout
   if (is.null(layout)) {
     # Make the panel
     # ncol: Number of columns of plots
     # nrow: Number of rows needed, calculated from # of cols
     layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                      ncol = cols, nrow = ceiling(numPlots/cols))
   }
   
   if (numPlots==1) {
     print(plots[[1]])
     
   } else {
     # Set up the page
     grid.newpage()
     pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
     
     # Make each plot, in the correct location
     for (i in 1:numPlots) {
       # Get the i,j matrix positions of the regions that contain this subplot
       matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
       
       print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                       layout.pos.col = matchidx$col))
     }
   }
 }

  multiplot(p1, p2, p3, p4, cols=2)
@
\caption{All data diversity density}
\label{fig:x}
\end{figure}

%-------------------------------------------
\section{Zoonotic - gp60 data}
%--------------------------------------------

<<test5,echo=F,keep.source = T>>=
## gp60 ###
 newdata <- Pi_data[ which(Pi_data$Gene =='gp60'), ]
@
  
<<test6,echo=TRUE,keep.source = T>>=
fit <- manova(cbind(Species,Pi,Theta) ~ Zoonotic, data = newdata)
summary(fit, test="Pillai")
summary.aov(fit)
@

\begin{figure}
<<test7, fig=TRUE,echo=F,float=F,height=4,width=8>>=
 par(mfrow=c(1,2))
 n = 2
 cols = gg_color_hue(n)
 plot(newdata$Zoonotic,newdata$Pi,col=cols,ylab=expression(Pi))
 plot(newdata$Zoonotic,newdata$Theta,col=cols,ylab=expression(theta))
@
\caption{gp60 diversity}
\label{fig:y}
\end{figure}

\begin{figure}
<<test8,echo=F, fig=TRUE,float=F,height=4,width=8>>=
   p5 <- ggplot(newdata, aes (x = Theta, y = Pi, colour = Zoonotic)) + stat_density_2d() +
   ylab(expression(paste(Pi))) + xlab(expression(paste(theta)))
  p6 <- ggplot(newdata, aes(x = Theta, y = Pi, colour = Zoonotic)) + geom_point() +
   ylab(expression(paste(Pi))) + xlab(expression(paste(theta)))
  multiplot(p5, p6, cols=2)
@
\caption{gp60 diversity density}
\label{fig:z}
\end{figure}

\end{document}
